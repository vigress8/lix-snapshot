name: Build Lix
on:
  schedule:
    - cron: 0 0 * * 0
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Free up runner space
        run: |
          # large docker images
          sudo docker image prune --all --force
          # large packages
          sudo apt-get purge -y '^llvm-.*' 'php.*' '^mongodb-.*' '^mysql-.*' azure-cli google-cloud-cli google-chrome-stable firefox powershell microsoft-edge-stable
          sudo apt-get autoremove -y
          sudo apt-get clean
          # large folders
          sudo rm -rf /var/lib/apt/lists/* /opt/hostedtoolcache /usr/local/games /usr/local/sqlpackage /usr/local/.ghcup /usr/local/share/powershell /usr/local/share/edge_driver /usr/local/share/gecko_driver /usr/local/share/chromium /usr/local/share/chromedriver-linux64 /usr/local/share/vcpkg /usr/local/lib/python* /usr/local/lib/node_modules /usr/local/julia* /opt/mssql-tools /etc/skel /usr/share/vim /usr/share/postgresql /usr/share/man /usr/share/apache-maven-* /usr/share/R /usr/share/alsa /usr/share/miniconda /usr/share/grub /usr/share/gradle-* /usr/share/locale /usr/share/texinfo /usr/share/kotlinc /usr/share/swift /usr/share/doc /usr/share/az_9.3.0 /usr/share/sbt /usr/share/ri /usr/share/icons /usr/share/java /usr/share/fonts /usr/lib/google-cloud-sdk /usr/lib/jvm /usr/lib/mono /usr/lib/R /usr/lib/postgresql /usr/lib/heroku /usr/lib/gcc || true
      - uses: easimon/maximize-build-space@v10
        with:
          build-mount-path: '/nix'
          build-mount-path-ownership: 'root:root'
          root-reserve-mb: '10240'
      - name: Install Nix
        uses: cachix/install-nix-action@v26
      - name: Cache the build
        uses: DeterminateSystems/magic-nix-cache-action@v6
      - name: Clone Lix
        uses: actions/checkout@v4
        with:
          repository: lix-project/lix
          ref: main
      - name: Build Lix
        run: |
          sudo sysctl -w kernel.apparmor_restrict_unprivileged_unconfined=0
          sudo sysctl -w kernel.apparmor_restrict_unprivileged_userns=0
          set -x
          cross_build() {
            nix-build --expr \
              'with import (builtins.getFlake (toString ./.)).inputs.nixpkgs {
                 crossSystem.config = "'$1'";
              };
              callPackage ./package.nix { stdenv = clangStdenv; }'
          }

          declare -A result
          result[x86_64-linux]=$(nix-build --attr packages.x86_64-linux.default)
          result[aarch64-linux]=$(cross_build aarch64-linux)

          cd "${TMPDIR:?}"
          tempBinCache=$(mktemp -d nixCache.XXXXXX)
          for target in "${!result[@]}"; do
            path=${result[$target]}
            printf '%s = %s\n' "$target" "$path" >> "$tempBinCache/.lix-paths"
            nix copy --no-check-sigs --to "file://$PWD/$tempBinCache" "$path"
          done

          tar --create --preserve-permissions --file=lix.tar "$tempBinCache"
          echo TARBALL="$PWD/lix.tar" >> $GITHUB_ENV
      - uses: actions/upload-artifact@v4
        with:
          path: |
            ${{ env.TARBALL }}
          if-no-files-found: error
